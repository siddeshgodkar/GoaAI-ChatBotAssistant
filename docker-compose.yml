services:
  backend:
    build:
      context: ./chatbot-app/backend
      dockerfile: Dockerfile
    container_name: chatbot-backend
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - "8000:8000"
    environment:
      GROQ_API_KEY: ${GROQ_API_KEY}
      LLAMA_API_URL: ${LLAMA_API_URL}
      PYTHONUNBUFFERED: 1

    networks:
      - chatbot-net

  frontend:
    build: ./frontend/frontend-chatbot
    container_name: chatbot-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - chatbot-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - "./monitoring/prometheus.yaml:/etc/prometheus/prometheus.yaml"
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
  #  # Optional: PostgreSQL Database
  # db:
  #   image: postgres:15
  #   container_name: chatbot-db
  #   restart: always
  #   environment:
  #     POSTGRES_USER: chatbot
  #     POSTGRES_PASSWORD: chatbot123
  #     POSTGRES_DB: chatbotdb
  #   volumes:
  #     - db_data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - chatbot-net

networks:
  chatbot-net: {}
# volumes:
#   db_data: {}
